21.patten(%)

import java.util.Scanner;

class Pattern {
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();
        for(int i=1;i<=n;i++){
            for(int j=1;j<=i;j++){
                System.out.print("% ");
            }
            System.out.println();
        }
    }
}

22.Hollow square

import java.util.Scanner;

class Pattern {
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(i==0 || i==n-1 || j==0 || j==n-1)
                {
                    System.out.print("*"+" ");
                }
                else{
                    System.out.print("  ");
                }
            }
            System.out.println();
        }
    }
}

23.patten

import java.util.Scanner;

class Pattern {
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();
        for(int i=1;i<=n;i++){
            for(int j=1;j<=i;j++){
                System.out.print(i+" ");
            }
            System.out.println();
        }
    }
}

24. pattern

import java.util.Scanner;

class Pattern {
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();
        int x=1;
        for(int i=1;i<=n;i++){
            for(int j=1;j<=i;j++){
                System.out.print(x*x+" ");
                x++;
            }
            System.out.println();
        }
    }
}

25.pattern

import java.util.Scanner;

class Pattern {
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();
        for(int i=1;i<=n;i++){
            for(int j=1;j<=i;j++){
                System.out.print(i+" ");
            }
            System.out.println();
        }
        for(int i=n-1;i>=1;i--){
            for(int j=1;j<=i;j++){
                System.out.print(i+" ");
            }
            System.out.println();
        }
    }
}

26.Hollow square Dollar

import java.util.Scanner;

class Pattern {
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        int n = obj.nextInt();
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(i==0 || i==n-1 || j==0 || j==n-1)
                {
                    System.out.print("$"+" ");
                }
                else{
                    System.out.print("  ");
                }
            }
            System.out.println();
        }
    }
}


27.inverted pyramid pattern

import java.io.*;
import java.util.*;

public class InvertedFullPyramid {
    public static void main(String[] args) {
        int n = 5;
        printPyramid(n);
    }

    public static void printPyramid(int n) {
        for (int i = n; i >= 1; i--) {
            for (int j = n; j > i; j--) System.out.print(" ");
            for (int k = 1; k <= 2 * i - 1; k++) System.out.print("*");
            System.out.println();
        }
    }
}

28.reverse the number using loop

import java.util.Scanner;
public class ReverseNumber {
    public static void main(String[] args) {
        Scanner obj = new Scanner(System.in);
        System.out.print("Enter the number: ");
        int number = obj.nextInt();
        int reversedNumber = 0;
        while (number != 0) {
            int digit = number % 10;        
            reversedNumber = reversedNumber * 10 + digit; 
            number/=10;
        }
        System.out.println("Reverse Number: " + reversedNumber);
    }
}

29. decimal to binary convert

import java.util.Scanner;

public class DecimalToBinaryAndReverse {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the decimal number: ");
        
        int decimalNumber = scanner.nextInt();
        
        String binaryString = convertDecimalToBinary(decimalNumber);
        
        String reversedBinary = reverseBinary(binaryString);
        
        int reversedDecimal = convertBinaryToDecimal(reversedBinary);
        
        System.out.println("Input: " + decimalNumber);
        System.out.println("Reversed Binary: " + reversedBinary);
        System.out.println("Output: " + reversedDecimal);
        
        scanner.close();
    }
    
    public static String convertDecimalToBinary(int decimalNumber) {
        StringBuilder binary = new StringBuilder();
        while (decimalNumber > 0) {
            int remainder = decimalNumber % 2;
            binary.insert(0, remainder);
            decimalNumber = decimalNumber / 2;
        }
        return binary.toString();
    }
    
    public static String reverseBinary(String binaryString) {
        StringBuilder reversed = new StringBuilder(binaryString);
        return reversed.reverse().toString();
    }
    
    public static int convertBinaryToDecimal(String binaryString) {
        int decimal = 0;
        int power = 0;
        for (int i = binaryString.length() - 1; i >= 0; i--) {
            int digit = binaryString.charAt(i) - '0';
            decimal += digit * Math.pow(2, power);
            power++;
        }
        return decimal;
    }
}

30. vote

import java.util.Scanner;

public class VotingEligibility {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter your age: ");
        int age = scanner.nextInt();

        if (age >= 18) {
            System.out.println("You are eligible to vote.");
        } else {
            int yearsLeft = 18 - age;
            System.out.println("You are not eligible to vote.");
            System.out.println("You are allowed to vote after " + yearsLeft + " years.");
        }

        scanner.close();
    }
}

